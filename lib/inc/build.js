'use strict';

exports.__esModule = true;

exports.default = function (state) {
    var props = {};

    each(state, function (key, value) {
        if (_dictionary2.default[key]) {
            props[_dictionary2.default[key].prop] = createTemplateProp(props[_dictionary2.default[key].prop], _dictionary2.default[key].position, value);
        } else {
            props[camelToDash(key)] = value;
        }
    });

    TYPES.forEach(function (type) {
        if (props[type]) {
            props[type] = applyDefaults(type, props[type]);
        }
    });

    return props;
};

var _dictionary = require('./dictionary');

var _dictionary2 = _interopRequireDefault(_dictionary);

var _typesXyz = require('./types-xyz');

var _popmotion = require('popmotion');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var each = _popmotion.utils.each;
var camelToDash = _popmotion.utils.camelToDash;

var XYZ_TEMPLATE = '$0 $1 $2';
var TYPES = [_typesXyz.POSITION, _typesXyz.SCALE, _typesXyz.ROTATION];

// Replace this with some kind of hook into Popmotion valueTypes
var defaults = {};
defaults[_typesXyz.POSITION] = defaults[_typesXyz.ROTATION] = 0;
defaults[_typesXyz.SCALE] = 1;

function createTemplateProp(existing, position, value) {
    var prop = existing || XYZ_TEMPLATE;

    prop = prop.replace('$' + position, value);

    return prop;
}

function applyDefaults(type, existing) {
    return existing.replace('$0', defaults[type]).replace('$1', defaults[type]).replace('$2', defaults[type]);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmMvYnVpbGQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztrQkEyQmUsVUFBVSxLQUFLLEVBQUU7QUFDNUIsUUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDOztBQUVmLFFBQUksQ0FBQyxLQUFLLEVBQUUsVUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFLO0FBQ3hCLFlBQUkscUJBQVcsR0FBRyxDQUFDLEVBQUU7QUFDakIsaUJBQUssQ0FBQyxxQkFBVyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMscUJBQVcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUscUJBQVcsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBRWxILE1BQU07QUFDSCxpQkFBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUNuQztLQUNKLENBQUMsQ0FBQzs7QUFFSCxTQUFLLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFLO0FBQ3BCLFlBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO0FBQ2IsaUJBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQ2xEO0tBQ0osQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDO0NBQ2hCOzs7Ozs7Ozs7Ozs7QUExQ0QsSUFBTSxJQUFJLEdBQUcsV0FGSixLQUFLLENBRUssSUFBSSxDQUFDO0FBQ3hCLElBQU0sV0FBVyxHQUFHLFdBSFgsS0FBSyxDQUdZLFdBQVcsQ0FBQzs7QUFFdEMsSUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDO0FBQ2hDLElBQU0sS0FBSyxHQUFHLFdBUEwsUUFBUSxZQUFFLEtBQUssWUFBRSxRQUFRLENBT087OztBQUFDLEFBRzFDLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNsQixRQUFRLFdBWEMsUUFBUSxDQVdDLEdBQUcsUUFBUSxXQVhILFFBQVEsQ0FXSyxHQUFHLENBQUMsQ0FBQztBQUM1QyxRQUFRLFdBWlcsS0FBSyxDQVlULEdBQUcsQ0FBQyxDQUFDOztBQUVwQixTQUFTLGtCQUFrQixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFO0FBQ25ELFFBQUksSUFBSSxHQUFHLFFBQVEsSUFBSSxZQUFZLENBQUM7O0FBRXBDLFFBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsR0FBRyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7O0FBRTNDLFdBQU8sSUFBSSxDQUFDO0NBQ2Y7O0FBRUQsU0FBUyxhQUFhLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRTtBQUNuQyxXQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztDQUM3RyxDQUFDIiwiZmlsZSI6ImJ1aWxkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpY3Rpb25hcnkgZnJvbSAnLi9kaWN0aW9uYXJ5JztcbmltcG9ydCB7IFBPU0lUSU9OLCBTQ0FMRSwgUk9UQVRJT04gfSBmcm9tICcuL3R5cGVzLXh5eic7XG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJ3BvcG1vdGlvbic7XG5cbmNvbnN0IGVhY2ggPSB1dGlscy5lYWNoO1xuY29uc3QgY2FtZWxUb0Rhc2ggPSB1dGlscy5jYW1lbFRvRGFzaDtcblxuY29uc3QgWFlaX1RFTVBMQVRFID0gJyQwICQxICQyJztcbmNvbnN0IFRZUEVTID0gW1BPU0lUSU9OLCBTQ0FMRSwgUk9UQVRJT05dO1xuXG4vLyBSZXBsYWNlIHRoaXMgd2l0aCBzb21lIGtpbmQgb2YgaG9vayBpbnRvIFBvcG1vdGlvbiB2YWx1ZVR5cGVzXG5sZXQgZGVmYXVsdHMgPSB7fTtcbmRlZmF1bHRzW1BPU0lUSU9OXSA9IGRlZmF1bHRzW1JPVEFUSU9OXSA9IDA7XG5kZWZhdWx0c1tTQ0FMRV0gPSAxO1xuXG5mdW5jdGlvbiBjcmVhdGVUZW1wbGF0ZVByb3AoZXhpc3RpbmcsIHBvc2l0aW9uLCB2YWx1ZSkge1xuICAgIGxldCBwcm9wID0gZXhpc3RpbmcgfHwgWFlaX1RFTVBMQVRFO1xuXG4gICAgcHJvcCA9IHByb3AucmVwbGFjZSgnJCcgKyBwb3NpdGlvbiwgdmFsdWUpO1xuXG4gICAgcmV0dXJuIHByb3A7XG59XG5cbmZ1bmN0aW9uIGFwcGx5RGVmYXVsdHModHlwZSwgZXhpc3RpbmcpIHtcbiAgICByZXR1cm4gZXhpc3RpbmcucmVwbGFjZSgnJDAnLCBkZWZhdWx0c1t0eXBlXSkucmVwbGFjZSgnJDEnLCBkZWZhdWx0c1t0eXBlXSkucmVwbGFjZSgnJDInLCBkZWZhdWx0c1t0eXBlXSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICBsZXQgcHJvcHMgPSB7fTtcblxuICAgIGVhY2goc3RhdGUsIChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgIGlmIChkaWN0aW9uYXJ5W2tleV0pIHtcbiAgICAgICAgICAgIHByb3BzW2RpY3Rpb25hcnlba2V5XS5wcm9wXSA9IGNyZWF0ZVRlbXBsYXRlUHJvcChwcm9wc1tkaWN0aW9uYXJ5W2tleV0ucHJvcF0sIGRpY3Rpb25hcnlba2V5XS5wb3NpdGlvbiwgdmFsdWUpO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wc1tjYW1lbFRvRGFzaChrZXkpXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBUWVBFUy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICAgIGlmIChwcm9wc1t0eXBlXSkge1xuICAgICAgICAgICAgcHJvcHNbdHlwZV0gPSBhcHBseURlZmF1bHRzKHR5cGUsIHByb3BzW3R5cGVdKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHByb3BzO1xufSJdfQ==